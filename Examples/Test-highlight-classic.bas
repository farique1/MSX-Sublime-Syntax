10 ' Refactored with MSX Basic Dignified
20 REM get #1,i :a$ = f$ :p$ = bin$(asc(a$)):a = len(p$) :z = 8-a :c$ = string$(z,"0") :b$ = c$+p$:rem line warps the highlight if : at end
30 ' {read_keyboard_main}
40 A$ = INKEY$
50 IF A$ = CHR$(13) AND HS = 0 THEN GOTO {{edit_screen}}
60 IF A$ = "1" THEN C1=C1-1:GOSUB 110
70 IF A$ = "2" THEN C1=C1+1:GOSUB 110
80 IF A$ = CHR$(&H1C) AND SX+8 < 95 THEN SX=SX+8:PS=PS+80:GOSUB 190
90 IF A$ = CHR$(&H1D) AND SX-8 > 15 THEN SX=SX-8:PS=PS-80:GOSUB 190
100 GOTO 30
110 ' {set_color}
120 C1 = ABS(C1 MOD 16+16) MOD 16:' use DEF FN
130 C2 = ABS(C2 MOD 16+16) MOD 16:' use DEF FN
140 COLOR C2,C1,C1
150 VPOKE 8194,C4*16+C1:VPOKE 8195,C4*16+C1
160 VPOKE 6915,C2:VPOKE 6919,C2:VPOKE 6923,C2:VPOKE 6927,C2
170 FOR F=8208 TO 8220:VPOKE F,C3*16+C1:NEXT
180 RETURN
190 ' {move_scan_sprite}
200 AY=SY+(SS-2):AX=0
210 IF SY+(SS-2) > 101 THEN AX=8:AY=23+(SY+(SS-2))-103
220 IF SX+AX > 95 THEN AY=200
230 VPOKE 6912,SY:VPOKE 6913,SX:VPOKE 6916,AY:VPOKE 6917,SX+AX
240 LOCATE 3,17:PRINTSTRING$(4-LEN(HEX$(PS)),"0")+HEX$(PS):' use PRINT USING ?
250 LOCATE 8,17:PRINTSTRING$(4-LEN(HEX$(PS+(SS-1))),"0")+HEX$(PS+(SS-1)):' use PRINT USING ?
260 RETURN
270 ' {{freeze refresh}}
280 IF A$ = "C" THEN HS = ABS(HS-1):IF HS = 1 THEN LOCATE4,7:PRINT "FREEZE" ELSE LOCATE3,7:PRINT "UNFREEZE":GOSUB {{update_memory_position}}
290 ' {character_shapes}
300 DATA 231,195,165,024,344,165,195,231:' data lines
310 DATA 255,128,128,128,abc,"8",128,255:' uniform color
320 DATA 255,129,000,000,000,000,000,000,129,255,000,000,000,000,000,000:' even with line break